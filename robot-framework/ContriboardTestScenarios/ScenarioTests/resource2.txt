*** Settings ***
Library           ExtendedSelenium2Library
Library           Collections

*** Variables ***
${Browser}        firefox
${DELAY}          0.1
${ValidUser}      jenny.porter@test.com
${ValidPassword}    jennyporter
${SERVER}         localhost:8000
${MainUrl}        http://${SERVER}
${LoginUrl}       http://${SERVER}/login
${BoardUrl}       http://${SERVER}/boards
${RegUrl}         http://${SERVER}/register
${LoginTitle}     Contriboard

*** Keywords ***
Login User
    Input Username    ${ValidUser}
    Input User Password    ${ValidPassword}
    ${check}    Get Element Attribute    //input[@class='btn-primary']@value
    Should Be Equal    ${check}    Login    error=Login button missing
    Submit Credentials
    Wait Until Page Contains Element    //div[@class='view view-workspace']    timeout=2    error=Board list Not Found
    Location Should Be    ${BoardUrl}

Create Board
    Click Element    //span[@class='fa fa-fw fa-plus']

Edit Board
    [Arguments]    ${min}=2    ${max}=6
    Get Edit Xpath    ${min}    ${max}
    Click Element    ${Expath}
    Wait Until Page Contains Element    //div[@class='dialog dialog-edit-board']    timeout=2    error=Board Edit Dialog Not Found
    Input Text    //input[@placeholder='Board Name']    Party TODO-list

Change Background
    [Arguments]    ${min}=0    ${max}=7
    Get Random Background    ${min}    ${max}
    Assign Id To Element    //div[@class='dialog-overlay']    Content
    ${rid}    Get Element Attribute    Content@data-reactid
    Select From List By Value    //select[@data-reactid='${rid}.0.1.4.2.0']    ${background}
    Run Keyword If    '${background}'=='NONE'    Empty Background
    Run Keyword Unless    '${background}'=='NONE'    Check Background

Empty Background
    ${check}    Get Element Attribute    //div[@data-reactid='${rid}.0.1.4.0.0']@class
    Should Be Equal    ${check}    blanko    error=Background Not Empty
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Check Background
    ${check}    Get Element Attribute    //img[@data-reactid='${rid}.0.1.4.0.0']@src
    Should Be Equal    ${check}    ${MainUrl}/dist/assets/img/bg/${bcheck}.png    error=Background Not Changed
    Click Button    //button[@data-reactid='${rid}.0.2.0']

Click Done Ticket Edit
    Click Button    //button[@class='btn-primary']
    Element Should Not Be Visible    //div[@class='dialog edit-ticket-dialog']    error=Edit Not Closed

Click Done Board Edit
    Click Button    //button[@class='btn-primary']
    Element Should Not Be Visible    //div[@class='dialog dialog-edit-board']    error=Edit Not Closed

Open Board
    [Arguments]    ${min}=2    ${max}=6
    Get Board Xpath    ${min}    ${max}
    Click Element    ${Bxpath}
    Wait Until Page Contains Element    //div[@class='board']    timeout=2    error=Board Not Open

Create Ticket
    Get X Coordinate
    Get Y Coordinate
    Double Click Element At Coordinates    //div[@class='board']    ${x}    ${y}
    Wait Until Page Contains Element    //div[@class="ticket"]    timeout=2    error=Ticket Not Created

Open Ticket Edit
    [Arguments]    ${min}=1    ${max}=5
    Get Ticket Xpath    ${min}    ${max}
    Double Click Element    ${Txpath}
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Edit Ticket Dialog Not Found

Input Ticket Text
    [Arguments]    ${Ttext}=Typing Something
    Wait Until Page Contains Element    //div[@class='dialog edit-ticket-dialog']    timeout=2    error=Edit Ticket Dialog Not Found
    Assign Id To Element    //section[@class='dialog-content']    reactIDtext
    ${rid}    Get Element Attribute    reactIDtext@data-reactid
    Input Text    //textarea[@data-reactid='${rid}.0']    ${Ttext}

Move Ticket
    [Arguments]    ${min}=1    ${max}=5
    Get Ticket Xpath    ${min}    ${max}
    Get X Move
    Get Y Move
    Drag And Drop By Offset    ${Txpath}    ${xMove}    ${yMove}

Share Board From Board
    Wait Until Page Contains Element    //div[@class='controls']    timeout=2    error=Controls Not Found
    Click Element    //span[@class='fa fa-fw fa-pencil']
    Wait Until Page Contains Element    //section[@class='dialog-content']
    Assign Id To Element    //div[@class='dialog-overlay']    reactID
    ${rid}    Get Element Attribute    reactID@data-reactid
    Click Button    //button[@data-reactid='${rid}.0.1.3.1']
    ${SharedUrl}    Get Value    //input[@placeholder='Shared URL']
    Should Not Be Equal    ${SharedUrl}    ${EMPTY}
    Set Suite Variable    ${Shared}    ${SharedUrl}

Open Shared Board
    [Arguments]    ${User}=Tester
    Open Browser    ${Shared}    ${Browser}
    Maximize Browser Window
    Set Selenium Speed    ${DELAY}
    Location Should Be    http://${Shared}
    Wait Until Page Contains Element    //form[@class='form']    timeout=2    error=Login Form Not Found
    Input Text    //input[@name='username']    ${User}
    Click Button    //input[@class='btn-primary']
    Wait Until Page Contains Element    //div[@class='board']    timeout=2    error=Board Not Open

Close Board
    Click Element    //span[@class='fa fa-fw fa-arrow-left']
    Wait Until Page Contains Element    //div[@class='content']    timeout=2    error=Board list Not Found
    Location Should Be    ${BoardUrl}

Log Out
    Click Element    //span[@class='fa fa-fw fa-user']
    Wait Until Page Contains Element    //ul[@class='dropdown']    timeout=2    error=Dropdown List Not Found
    Assign Id To Element    //ul[@class='dropdown']    Dropdown
    ${did}    Get Element Attribute    Dropdown@data-reactid
    Click Element    //li[@data-reactid='${did}.$3']
    Wait Until Page Contains Element    //form[@class='form']    timeout=2    error=Login Form not found
    Location Should Be    ${LoginUrl}

Input Username
    [Arguments]    ${username}
    Input Text    //input[@type='email']    ${username}

Input User Password
    [Arguments]    ${password}
    Input Password    //input[@type='password']    ${password}

Submit Credentials
    Click Button    //input[@class='btn-primary']

Open Browser To Login Page
    Open Browser    ${LoginUrl}    ${Browser}
    Maximize Browser Window
    Set Selenium Speed    ${DELAY}
    Location Should Be    ${LoginUrl}
    Title Should Be    ${LoginTitle}
    Wait Until Page Contains Element    //form[@class='form']    timeout=2    error=Login Form Not Found

Get Board Xpath
    [Arguments]    ${min}    ${max}
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Bxpath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[1]/div

Get Edit Xpath
    [Arguments]    ${min}    ${max}
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Expath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[3]/div[2]/span

Get Delete Xpath
    [Arguments]    ${min}    ${max}
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Dxpath}    xpath=/html/body/div/div/div[2]/div[${int}]/div[3]/div[1]/span

Get Ticket Xpath
    [Arguments]    ${min}    ${max}
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${Txpath}    xpath=/html/body/div/div/div[1]/div/div[1]/div[${int}]

Get X Move
    [Arguments]    ${min}=-768    ${max}=768
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${xMove}    ${int}

Get Y Move
    [Arguments]    ${min}=-432    ${max}=432
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${yMove}    ${int}

Get Y Coordinate
    [Arguments]    ${min}=-432    ${max}=432
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${y}    ${int}

Get X Coordinate
    [Arguments]    ${min}=-768    ${max}=768
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    Set Test Variable    ${x}    ${int}

Get Random Background
    [Arguments]    ${min}    ${max}
    ${int}    Evaluate    random.randint(${min}, ${max})    random
    ${list}    Create List    NONE    PLAY    SWOT    SCRUM    KANBAN
    ...    KEEP_DROP_TRY    CUSTOMER_JOURNEY_MAP    BUSINESS_MODEL_CANVAS
    ${item}    Get From List    ${list}    ${int}
    Set Test Variable    ${background}    ${item}
    ${list2}    Create List    blank    play    swot    scrum    kanban
    ...    keep_drop_try    customer_journey_map    business_model_canvas
    ${item2}    Get From List    ${list2}    ${int}
    Set Test Variable    ${bcheck}    ${item2}
